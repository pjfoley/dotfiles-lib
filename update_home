#!/bin/bash

(( $# >= 1 )) && [ -d $1 ] && USER_HOME=${1%/} || USER_HOME="${HOME}"
(( $# >= 2 )) && [ -d $2 ] && DOTFILES_SRC=${2%/} || DOTFILES_SRC="${USER_HOME}/.dotfiles/home"
(( $# >= 3 )) && [ -d $3 ] && DOTFILES_BKUP=${3%/} || DOTFILES_BKUP="${USER_HOME}/.dotfiles_org"

lnk(){ ln -fs $2 $3; echo "${1} - $(tput setaf 2)${2} $(tput sgr0) to ${3}"; }
cpy(){ cp -Rpf $2 $3; echo "${1} - $(tput setaf 2)${2} $(tput sgr0) to ${3}"; }
mov(){ mv -fu $2 $3; echo "${1} - $(tput setaf 2)${2} $(tput sgr0) to ${3}"; }

exists_file()
{
  ( [[ $# == 1 ]] \
    && ( [[ -e ${1} ]] )
  ) || \
  ( [[ $# == 2 ]] \
      && ( [[ -h ${2} ]] && [[ $(readlink ${2}) == ${1} ]] ) \
      || ( [[ -e $2 ]] && $(cmp -s $1 $2) ) \
  ) ;
}
not_exists_file(){ ! (( [[ $# == 1 ]] && exists_file $1 ) || ( [[ $# == 2 ]] && exists_file $1 $2)) ; }

confirm_move()
{
  l_question="File $(tput setaf 2)${1}$(tput sgr0) exists.  Overwrite - (Y)es, (N)o, (D)iff: "

  while true; do
  read -p "${l_question} " -n 1 l_response
    case $l_response in
      [Yy]* )
        echo
        mov ${1} ${2}
        break
        ;;
      [Nn]* )
        echo
        break
        ;;
      [Dd]* )
        echo
        diff -u ${1} ${2}
        echo
        ;;
    esac
  done
}

backup_dotfiles()
{
  shopt -s nullglob

  local backup_loc="$1"
  local new_dot_files_loc="$2"

  if [[ ! -d ${backup_loc} ]]; then
    mkdir -p ${backup_loc}
  fi

  local f_name
    for script in ${new_dot_files_loc}/*; do
      f_name=$(basename $script)

      if [[ -e ${HOME}/.${f_name} ]] && [[ ! $(readlink ${HOME}/.${f_name}) == ${script} ]]; then
        if [[ -e ${dest_loc}/${f_name} ]]; then
          confirm_move $f_name $backup_loc
        else
          move_file $f_name $backup_loc
          ln -fs ${script} ${HOME}/.${f_name}
        fi
      fi
    done
}


dotfile_real_name()
{
  case "${2::4}" in
    "dot_" )
      return "${1}/.${2:4}" ;;
    "cpy_" )
      return "${1}/${2:4}" ;;
    * )
      return "${1}/${2}" ;;
  esac
}





file_type_action()
{
  f_name=$1
  SOURCE=$2

  case "${f_name::4}" in
    "dot_" )
      $DESTINATION="${USER_HOME}/.${f_name:4}"
      not_exists_file $SOURCE $DESTINATION && lnk $SOURCE $DESTINATION ;;
    "cpy_" )
      $DESTINATION="${USER_HOME}/${f_name:4}"
      not_exists_file $SOURCE $DESTINATION && cpy $SOURCE $DESTINATION ;;
    * )
      $DESTINATION="${USER_HOME}/${f_name}"
      not_exists_file $SOURCE $DESTINATION && lnk $SOURCE $DESTINATION ;;
  esac

}


sync_files()
{
  local dotfiles_src="$1"

  for SOURCE in ${dotfiles_src}/*; do
      f_name=$(basename $SOURCE)

      if [[ ! -e ${USER_HOME}/.${f_name} ]] ; then
        file_type_action $f_name $SOURCE
      fi
  done
}


backup_dotfiles ${DOTFILES_BKUP} ${DOTFILES_SRC}
sync_dotfiles ${DOTFILES_SRC}
