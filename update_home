#!/bin/bash

(( $# >= 1 )) && [ -d $1 ] && USER_HOME=${1%/} || USER_HOME="${HOME}"
(( $# >= 2 )) && [ -d $2 ] && DOTFILES_SRC=${2%/} || DOTFILES_SRC="${USER_HOME}/.dotfiles/home"
(( $# >= 3 )) && [ -d $3 ] && DOTFILES_BKUP=${3%/} || DOTFILES_BKUP="${USER_HOME}/.dotfiles_org"

lnk(){ ln -fs $2 $3; echo "${1} - $(tput setaf 2)${2} $(tput sgr0) to ${3}"; }
cpy(){ cp -Rpf $2 $3; echo "${1} - $(tput setaf 2)${2} $(tput sgr0) to ${3}"; }
mov(){ mv -fu $2 $3; echo "${1} - $(tput setaf 2)${2} $(tput sgr0) to ${3}"; }

exists_file()
{
  # Check for existance of file or directory
  ( [[ $# == 1 ]] \
    && ( [[ -e ${1} ]] )
  ) || \
  # If link confirm it points to dot file or if exists both files equal each other
  ( [[ $# == 2 ]] \
      && ( [[ -h ${2} ]] && [[ $(readlink ${2}) == ${1} ]] ) \
      || ( [[ -e $2 ]] && $(cmp -s $1 $2) ) \
  ) ;
}
# Call exists function and negate the result
not_exists_file(){ ! (( [[ $# == 1 ]] && exists_file $1 ) || ( [[ $# == 2 ]] && exists_file $1 $2)) ; }

if [[ ! -d ${DOTFILES_BKUP} ]]; then
  mkdir -p ${DOTFILES_BKUP}
fi

confirm_move()
{
  l_question="Back of $(tput setaf 2)${1}$(tput sgr0) already exists.  Overwrite existing backup - (Y)es, (N)o: "

  while true; do
  read -p "${l_question} " -n 1 l_response
    case $l_response in
      [Yy]* )
        echo
        echo true
        break
        ;;
      [Nn]* )
        echo
        echo false
        break
        ;;
    esac
  done
}

# Files marked as cpy or mov will be move
file_real_name()
{
  case "${1::4}" in
    "dot_" )
      echo ".${1:4}" ;;
    "cpy_" | "mov_" )
      echo "${1:4}" ;;
    * )
      echo "${1}" ;;
  esac
}

dotfiles_action()
{
  DOTFILES_FILE=$1
  SOURCE=$2
  DESTINATION=$3

  case "${DOTFILES_FILE::4}" in
    "mov_" )
    mov "Moving" $SOURCE $DESTINATION ;;
    "cpy_" )
    cpy "Copying" $SOURCE $DESTINATION ;;
    "dot_" | * )
    lnk "Linking" $SOURCE $DESTINATION ;;
  esac
}

sync_files()
{
  local dotfiles_src="$1"

  for SOURCE in ${dotfiles_src}/*; do
    DOTFILES_FILE=$(basename $SOURCE)
    HOME_FILE="${USER_HOME}/$(file_real_name $DOTFILES_FILE)"
    BACKUP_FILE="${DOTFILES_BKUP}/$(basename $HOME_FILE)"

    # If File is not in home just write
    if not_exists_file $HOME_FILE ; then
      dotfiles_action $DOTFILES_FILE $SOURCE $HOME_FILE
    # Don't do anything if dotfile is in home directory
    elif not_exists_file $SOURCE $HOME_FILE ; then
      # Just move file in home dir if there is not already a backup
      if not_exists_file $BACKUP_FILE ; then
        mov "Backing up" $HOME_FILE $BACKUP_FILE
        dotfiles_action $DOTFILES_FILE $SOURCE ${HOME_FILE}
      # If there is a backup ask user if its ok to overwrite backed up file
      else
        l_result=$(confirm_move ${DOTFILES_FILE:4} $SOURCE $BACKUP_FILE)
        if $l_result ; then
          mov "Backing up" $HOME_FILE $BACKUP_FILE
          dotfiles_action $DOTFILES_FILE $SOURCE ${HOME_FILE}
        fi
      fi
    fi
  done
}

sync_files ${DOTFILES_SRC}
